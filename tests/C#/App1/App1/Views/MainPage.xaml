<Page
    x:Class="App1.Views.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:local="using:App1.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:sys="using:System"
    mc:Ignorable="d">

    <Grid x:Name="ContentArea" RowSpacing="40">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <StackPanel
            x:Name="ConstantBlock"
            Grid.Row="0"
            Grid.RowSpan="1"
            Grid.Column="0"
            Grid.ColumnSpan="2">
            <TextBlock
                Padding="0,10"
                FontSize="24"
                Text="Constant Returns" />
            <TextBlock Text="{x:Bind sys:String.Format('Int: {0}', ViewModel.IntRetVal)}" />
            <TextBlock Text="{x:Bind sys:String.Format('Bool: {0}', ViewModel.BoolRetVal)}" />
            <TextBlock Text="{x:Bind sys:String.Format('Double: {0}', ViewModel.DoubleRetVal)}" />
            <TextBlock Text="{x:Bind sys:String.Format('Char: {0}', ViewModel.CharRetVal)}" />
            <TextBlock Text="{x:Bind sys:String.Format('String: {0}', ViewModel.StringRetVal)}" />
            <TextBlock Text="{x:Bind sys:String.Format('Unicode String: {0}', ViewModel.UnicodeStringRetVal)}" />
        </StackPanel>

        <StackPanel
            x:Name="AddBlock"
            Grid.Row="1"
            Grid.RowSpan="1"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            Spacing="14">
            <TextBlock
                Padding="0,10"
                FontSize="24"
                Text="Add" />

            <local:AddRow
                Title="Int"
                AddNum1="{x:Bind ViewModel.AddInt1, Mode=TwoWay}"
                AddNum2="{x:Bind ViewModel.AddInt2, Mode=TwoWay}"
                AddNumRes="{x:Bind ViewModel.AddIntRes, Mode=OneWay}"
                Formatter="{x:Bind ViewModel.IntFormatter}"
                PerformAddCommand="{x:Bind ViewModel.PerformAddIntCommand}" />

            <local:AddRow
                Title="Double"
                AddNum1="{x:Bind ViewModel.AddDouble1, Mode=TwoWay}"
                AddNum2="{x:Bind ViewModel.AddDouble2, Mode=TwoWay}"
                AddNumRes="{x:Bind ViewModel.AddDoubleRes, Mode=OneWay}"
                Formatter="{x:Bind ViewModel.DoubleFormatter}"
                PerformAddCommand="{x:Bind ViewModel.PerformAddDoubleCommand}" />

            <local:AddRow
                Title="Float"
                AddNum1="{x:Bind ViewModel.AddFloat1, Mode=TwoWay}"
                AddNum2="{x:Bind ViewModel.AddFloat2, Mode=TwoWay}"
                AddNumRes="{x:Bind ViewModel.AddFloatRes, Mode=OneWay}"
                Formatter="{x:Bind ViewModel.FloatFormatter}"
                PerformAddCommand="{x:Bind ViewModel.PerformAddFloatCommand}" />
        </StackPanel>

        <StackPanel
            x:Name="InputBlock"
            Grid.Row="2"
            Grid.RowSpan="1"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            Spacing="14">
            <TextBlock
                Padding="0,10"
                FontSize="24"
                Text="Input" />

            <StackPanel Orientation="Horizontal" Spacing="10">
                <TextBlock FontSize="20" Text="String:" />
                <TextBox PlaceholderText="Name" Text="{x:Bind ViewModel.SayHelloInput, Mode=TwoWay}">
                    <interactivity:Interaction.Behaviors>
                        <interactivity:EventTriggerBehavior EventName="LostFocus">
                            <interactivity:InvokeCommandAction Command="{x:Bind ViewModel.PerformSayHelloCommand}" />
                        </interactivity:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </TextBox>
                <TextBlock FontSize="20" Text=":" />
                <TextBlock FontSize="20" Text="{x:Bind ViewModel.SayHelloOutput, Mode=OneWay}" />
            </StackPanel>

            <StackPanel Orientation="Horizontal" Spacing="10">
                <ComboBox
                    Header="Direction"
                    ItemsSource="{x:Bind ViewModel.Directions}"
                    SelectedItem="{x:Bind ViewModel.SelectedDirection, Mode=TwoWay}" />
                <TextBlock FontSize="14" Text="Opposite: " />
                <TextBlock FontSize="14" Text="{x:Bind ViewModel.OppositeDirection, Mode=OneWay}" />
            </StackPanel>
        </StackPanel>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="720" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ConstantBlock.(Grid.Column)" Value="0" />
                        <Setter Target="ConstantBlock.(Grid.RowSpan)" Value="1" />
                        <Setter Target="ConstantBlock.(Grid.ColumnSpan)" Value="1" />
                        <Setter Target="AddBlock.(Grid.Row)" Value="0" />
                        <Setter Target="AddBlock.(Grid.Column)" Value="1" />
                        <Setter Target="AddBlock.(Grid.RowSpan)" Value="1" />
                        <Setter Target="AddBlock.(Grid.ColumnSpan)" Value="1" />
                        <Setter Target="InputBlock.(Grid.Row)" Value="1" />
                        <Setter Target="InputBlock.(Grid.Column)" Value="0" />
                        <Setter Target="InputBlock.(Grid.RowSpan)" Value="2" />
                        <Setter Target="InputBlock.(Grid.ColumnSpan)" Value="2" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
